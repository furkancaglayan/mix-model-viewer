<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="d3/d5d/a00463" kind="class" language="C++" prot="public">
    <compoundname>mix::containers::tree_node</compoundname>
    <includes refid="d1/d88/a00128" local="no">tree_node.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d3/d5d/a00463_1a48cced46533fcc0b880f8ed4f0160a3a" prot="private" static="no" mutable="no">
        <type><ref refid="dd/d9c/a00487" kindref="compound">mix::core::mixGuid</ref></type>
        <definition>mix::core::mixGuid mix::containers::tree_node::_key</definition>
        <argsstring></argsstring>
        <name>_key</name>
        <qualifiedname>mix::containers::tree_node::_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="96" column="32" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="d3/d5d/a00463_1a5af9a79743912767dee8da7c851a017d" compoundref="d1/d88/a00128" startline="40" endline="43">get_key</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d5d/a00463_1a2e4e8bc18a11bda8a8ccf3ab56a5fe9c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt;mix::assetsystem::mixAsset_item&gt; mix::containers::tree_node::_value</definition>
        <argsstring></argsstring>
        <name>_value</name>
        <qualifiedname>mix::containers::tree_node::_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="97" column="29" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="d3/d5d/a00463_1add0613247451d0b0237cdb821b9e89ad" compoundref="d1/d88/a00128" startline="45" endline="48">get_value</referencedby>
        <referencedby refid="d3/d5d/a00463_1aa512e7121feecd8ebbdd892226781829" compoundref="dc/dfe/a00125" startline="36" endline="50">print_node</referencedby>
        <referencedby refid="d3/d5d/a00463_1af02e5269413c42afd1e805c157de8b51" compoundref="d1/d88/a00128" startline="69" endline="94">search_with_member</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> &gt; &gt;</type>
        <definition>std::vector&lt;std::unique_ptr&lt;tree_node&gt; &gt; mix::containers::tree_node::_children</definition>
        <argsstring></argsstring>
        <name>_children</name>
        <qualifiedname>mix::containers::tree_node::_children</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="98" column="25" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="d3/d5d/a00463_1ae9a0e33cf08515a598cd46da13061755" compoundref="d1/d88/a00128" startline="35" endline="38">get_children</referencedby>
        <referencedby refid="d3/d5d/a00463_1a585d9bb73837c5645ea7850d1505cf59" compoundref="d1/d88/a00128" startline="30" endline="33">has_children</referencedby>
        <referencedby refid="d3/d5d/a00463_1af247d1617c323094f079f2962a797555" compoundref="dc/dfe/a00125" startline="4" endline="17">insert</referencedby>
        <referencedby refid="d3/d5d/a00463_1aa512e7121feecd8ebbdd892226781829" compoundref="dc/dfe/a00125" startline="36" endline="50">print_node</referencedby>
        <referencedby refid="d3/d5d/a00463_1af02e5269413c42afd1e805c157de8b51" compoundref="d1/d88/a00128" startline="69" endline="94">search_with_member</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d3/d5d/a00463_1ac77541119d7b7c7efc0362bf5035c838" prot="private" static="no" mutable="no">
        <type><ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> *</type>
        <definition>tree_node* mix::containers::tree_node::_parent</definition>
        <argsstring></argsstring>
        <name>_parent</name>
        <qualifiedname>mix::containers::tree_node::_parent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="99" column="23" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="99" bodyend="-1"/>
        <referencedby refid="d3/d5d/a00463_1a48a5401e6fac36a6ae0898979d2398d3" compoundref="d1/d88/a00128" startline="55" endline="58">get_parent</referencedby>
        <referencedby refid="d3/d5d/a00463_1a3fd9fc52c4620e5a23dbaeadd79e70ca" compoundref="d1/d88/a00128" startline="50" endline="53">is_root</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d3/d5d/a00463_1ab46acb894b38cff9e6f8306c629f790a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>mix::containers::tree_node::tree_node</definition>
        <argsstring>(mix::core::mixGuid key, std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; value, tree_node *parent)</argsstring>
        <name>tree_node</name>
        <qualifiedname>mix::containers::tree_node::tree_node</qualifiedname>
        <param>
          <type><ref refid="dd/d9c/a00487" kindref="compound">mix::core::mixGuid</ref></type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
          <declname>value</declname>
        </param>
        <param>
          <type><ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> *</type>
          <declname>parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="18" column="13" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1af247d1617c323094f079f2962a797555" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> *</type>
        <definition>mix::containers::tree_node * mix::containers::tree_node::insert</definition>
        <argsstring>(const mix::core::mixGuid &amp;key, std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; child)</argsstring>
        <name>insert</name>
        <qualifiedname>mix::containers::tree_node::insert</qualifiedname>
        <param>
          <type>const <ref refid="dd/d9c/a00487" kindref="compound">mix::core::mixGuid</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="23" column="23" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="4" bodyend="17"/>
        <references refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" compoundref="d1/d88/a00128" startline="98">_children</references>
        <referencedby refid="dd/d63/a00455_1ae09d5047c26fd969a8f310221a8d4893" compoundref="d3/d00/a00113" startline="53" endline="77">mix::assetsystem::mixAsset_manager::resolve_assets_impl</referencedby>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1aaa851eb3bb65895e8711dcf307a1e7b5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; mix::containers::tree_node::search_with_guid</definition>
        <argsstring>(const mix::core::mixGuid &amp;key) const</argsstring>
        <name>search_with_guid</name>
        <qualifiedname>mix::containers::tree_node::search_with_guid</qualifiedname>
        <param>
          <type>const <ref refid="dd/d9c/a00487" kindref="compound">mix::core::mixGuid</ref> &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="24" column="29" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="18" bodyend="21"/>
        <references refid="da/dee/a00383_1ae7f95f45067eeec3fb17487495c886d8" compoundref="da/d45/a00011" startline="54" endline="57">mix::assetsystem::mixAsset_item::get_guid</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1ae95bc04378bcc757e62560e4a1dacc9a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; mix::containers::tree_node::search_with_base_name</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>search_with_base_name</name>
        <qualifiedname>mix::containers::tree_node::search_with_base_name</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="25" column="29" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="23" bodyend="26"/>
        <references refid="da/dee/a00383_1a46d0785046788fcc9c789d1b11529ad3" compoundref="da/d45/a00011" startline="24" endline="27">mix::assetsystem::mixAsset_item::get_base_name</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1ac68eb1cd96a83b09a1fff358fe2219eb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; mix::containers::tree_node::search_with_full_name</definition>
        <argsstring>(const std::string &amp;name) const</argsstring>
        <name>search_with_full_name</name>
        <qualifiedname>mix::containers::tree_node::search_with_full_name</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="26" column="29" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="27" bodyend="30"/>
        <references refid="da/dee/a00383_1a887d3bd23d5d002ef71c4aa6a9e6ad7a" compoundref="da/d45/a00011" startline="31" endline="34">mix::assetsystem::mixAsset_item::get_full_name</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1aec76f8c37b7bfa827be0842ffafd8601" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; mix::containers::tree_node::search_with_path</definition>
        <argsstring>(const std::string &amp;path) const</argsstring>
        <name>search_with_path</name>
        <qualifiedname>mix::containers::tree_node::search_with_path</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="27" column="29" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="31" bodyend="34"/>
        <references refid="da/dee/a00383_1a2bb7fcb2693b6fd89ac22f4d40371f76" compoundref="da/d45/a00011" startline="36" endline="39">mix::assetsystem::mixAsset_item::get_path</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1a585d9bb73837c5645ea7850d1505cf59" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool mix::containers::tree_node::has_children</definition>
        <argsstring>() const</argsstring>
        <name>has_children</name>
        <qualifiedname>mix::containers::tree_node::has_children</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="30" column="25" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="30" bodyend="33"/>
        <references refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" compoundref="d1/d88/a00128" startline="98">_children</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1ae9a0e33cf08515a598cd46da13061755" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; std::unique_ptr&lt; <ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> &gt; &gt; &amp;</type>
        <definition>std::vector&lt; std::unique_ptr&lt; tree_node &gt; &gt; &amp; mix::containers::tree_node::get_children</definition>
        <argsstring>()</argsstring>
        <name>get_children</name>
        <qualifiedname>mix::containers::tree_node::get_children</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="35" column="32" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="35" bodyend="38"/>
        <references refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" compoundref="d1/d88/a00128" startline="98">_children</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1a5af9a79743912767dee8da7c851a017d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="dd/d9c/a00487" kindref="compound">mix::core::mixGuid</ref> &amp;</type>
        <definition>const mix::core::mixGuid &amp; mix::containers::tree_node::get_key</definition>
        <argsstring>() const</argsstring>
        <name>get_key</name>
        <qualifiedname>mix::containers::tree_node::get_key</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="40" column="45" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="40" bodyend="43"/>
        <references refid="d3/d5d/a00463_1a48cced46533fcc0b880f8ed4f0160a3a" compoundref="d1/d88/a00128" startline="96">_key</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1add0613247451d0b0237cdb821b9e89ad" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> *</type>
        <definition>const mix::assetsystem::mixAsset_item * mix::containers::tree_node::get_value</definition>
        <argsstring>() const</argsstring>
        <name>get_value</name>
        <qualifiedname>mix::containers::tree_node::get_value</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="45" column="58" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="45" bodyend="48"/>
        <references refid="d3/d5d/a00463_1a2e4e8bc18a11bda8a8ccf3ab56a5fe9c" compoundref="d1/d88/a00128" startline="97">_value</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1a3fd9fc52c4620e5a23dbaeadd79e70ca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const bool</type>
        <definition>const bool mix::containers::tree_node::is_root</definition>
        <argsstring>() const</argsstring>
        <name>is_root</name>
        <qualifiedname>mix::containers::tree_node::is_root</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="50" column="31" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="50" bodyend="53"/>
        <references refid="d3/d5d/a00463_1ac77541119d7b7c7efc0362bf5035c838" compoundref="d1/d88/a00128" startline="99">_parent</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1a48a5401e6fac36a6ae0898979d2398d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> *</type>
        <definition>const tree_node * mix::containers::tree_node::get_parent</definition>
        <argsstring>() const</argsstring>
        <name>get_parent</name>
        <qualifiedname>mix::containers::tree_node::get_parent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="55" column="36" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="55" bodyend="58"/>
        <references refid="d3/d5d/a00463_1ac77541119d7b7c7efc0362bf5035c838" compoundref="d1/d88/a00128" startline="99">_parent</references>
      </memberdef>
      <memberdef kind="function" id="d3/d5d/a00463_1a9f12e8c89ad46939c830058938fe09d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void mix::containers::tree_node::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <qualifiedname>mix::containers::tree_node::print</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="60" column="25" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="60" bodyend="63"/>
        <references refid="d3/d5d/a00463_1aa512e7121feecd8ebbdd892226781829" compoundref="dc/dfe/a00125" startline="36" endline="50">print_node</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="d3/d5d/a00463_1af02e5269413c42afd1e805c157de8b51" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; <ref refid="da/dee/a00383" kindref="compound">mix::assetsystem::mixAsset_item</ref> &gt;</type>
        <definition>std::shared_ptr&lt; mix::assetsystem::mixAsset_item &gt; mix::containers::tree_node::search_with_member</definition>
        <argsstring>(T val, T(mix::assetsystem::mixAsset_item::*getter)(void) const) const</argsstring>
        <name>search_with_member</name>
        <qualifiedname>mix::containers::tree_node::search_with_member</qualifiedname>
        <param>
          <type>T</type>
          <declname>val</declname>
        </param>
        <param>
          <type>T(mix::assetsystem::mixAsset_item::*)(void) const</type>
          <declname>getter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="69" column="13" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="69" bodyend="94"/>
        <references refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" compoundref="d1/d88/a00128" startline="98">_children</references>
        <references refid="d3/d5d/a00463_1a2e4e8bc18a11bda8a8ccf3ab56a5fe9c" compoundref="d1/d88/a00128" startline="97">_value</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="d3/d5d/a00463_1aa512e7121feecd8ebbdd892226781829" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void mix::containers::tree_node::print_node</definition>
        <argsstring>(tree_node *node, int depth)</argsstring>
        <name>print_node</name>
        <qualifiedname>mix::containers::tree_node::print_node</qualifiedname>
        <param>
          <type><ref refid="d3/d5d/a00463" kindref="compound">tree_node</ref> *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="95" column="25" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.cpp" bodystart="36" bodyend="50"/>
        <references refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" compoundref="d1/d88/a00128" startline="98">_children</references>
        <references refid="d3/d5d/a00463_1a2e4e8bc18a11bda8a8ccf3ab56a5fe9c" compoundref="d1/d88/a00128" startline="97">_value</references>
        <referencedby refid="d3/d5d/a00463_1a9f12e8c89ad46939c830058938fe09d7" compoundref="d1/d88/a00128" startline="60" endline="63">print</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>mix::containers::tree_node</label>
        <link refid="d3/d5d/a00463"/>
        <childnode refid="2" relation="usage">
          <edgelabel>_key</edgelabel>
        </childnode>
        <childnode refid="1" relation="usage">
          <edgelabel>_parent</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>mix::core::mixGuid</label>
        <link refid="dd/d9c/a00487"/>
      </node>
    </collaborationgraph>
    <location file="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" line="14" column="9" bodyfile="C:/Users/furka/Desktop/Develop/mix-model-viewer/src/containers/tree_node.h" bodystart="15" bodyend="100"/>
    <listofallmembers>
      <member refid="d3/d5d/a00463_1a87292a3a3f5d4d9c491ee0e129b6e648" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>_children</name></member>
      <member refid="d3/d5d/a00463_1a48cced46533fcc0b880f8ed4f0160a3a" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>_key</name></member>
      <member refid="d3/d5d/a00463_1ac77541119d7b7c7efc0362bf5035c838" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>_parent</name></member>
      <member refid="d3/d5d/a00463_1a2e4e8bc18a11bda8a8ccf3ab56a5fe9c" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>_value</name></member>
      <member refid="d3/d5d/a00463_1ae9a0e33cf08515a598cd46da13061755" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>get_children</name></member>
      <member refid="d3/d5d/a00463_1a5af9a79743912767dee8da7c851a017d" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>get_key</name></member>
      <member refid="d3/d5d/a00463_1a48a5401e6fac36a6ae0898979d2398d3" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>get_parent</name></member>
      <member refid="d3/d5d/a00463_1add0613247451d0b0237cdb821b9e89ad" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>get_value</name></member>
      <member refid="d3/d5d/a00463_1a585d9bb73837c5645ea7850d1505cf59" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>has_children</name></member>
      <member refid="d3/d5d/a00463_1af247d1617c323094f079f2962a797555" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>insert</name></member>
      <member refid="d3/d5d/a00463_1a3fd9fc52c4620e5a23dbaeadd79e70ca" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>is_root</name></member>
      <member refid="d3/d5d/a00463_1a9f12e8c89ad46939c830058938fe09d7" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>print</name></member>
      <member refid="d3/d5d/a00463_1aa512e7121feecd8ebbdd892226781829" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>print_node</name></member>
      <member refid="d3/d5d/a00463_1ae95bc04378bcc757e62560e4a1dacc9a" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>search_with_base_name</name></member>
      <member refid="d3/d5d/a00463_1ac68eb1cd96a83b09a1fff358fe2219eb" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>search_with_full_name</name></member>
      <member refid="d3/d5d/a00463_1aaa851eb3bb65895e8711dcf307a1e7b5" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>search_with_guid</name></member>
      <member refid="d3/d5d/a00463_1af02e5269413c42afd1e805c157de8b51" prot="private" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>search_with_member</name></member>
      <member refid="d3/d5d/a00463_1aec76f8c37b7bfa827be0842ffafd8601" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>search_with_path</name></member>
      <member refid="d3/d5d/a00463_1ab46acb894b38cff9e6f8306c629f790a" prot="public" virt="non-virtual"><scope>mix::containers::tree_node</scope><name>tree_node</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
